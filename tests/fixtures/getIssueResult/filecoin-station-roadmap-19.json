{
  "html_url": "https://github.com/filecoin-station/roadmap/issues/19",
  "title": "SPARK M2 Lassie Retrievals",
  "state": "closed",
  "node_id": "I_kwDOIUF5GM5mA1Rj",
  "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">Replace the code making HTTP requests to IPFS Gateway with a retrieval client like Lassie.</p>\n<p dir=\"auto\">Important: Retrieval requests from this module should be indistinguishable from “legit” requests made by other actors in the network (e.g. Saturn). Otherwise SPs can prioritise checker requests over regular traffic.</p>\n<p dir=\"auto\">Children:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Write a Go/FFI shim to start &amp; stop the Lassie HTTP server. Write Rust bindings for this shim and make sure we can use this from Rust! We will need to configure tooling for CI/CD and also write tests! <strong>[5 days]</strong><br>\n→ <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1719919046\" data-permission-text=\"Title is private\" data-url=\"https://github.com/filecoin-station/rusty-lassie/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/filecoin-station/rusty-lassie/pull/1/hovercard\" href=\"https://github.com/filecoin-station/rusty-lassie/pull/1\">filecoin-station/rusty-lassie#1</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Integrate Lassie into Zinnia (both <code class=\"notranslate\">zinnia</code> and <code class=\"notranslate\">zinniad</code>). (Start Lassie on start, stop it on exit.) <strong>[2 day]</strong>\n<ul dir=\"auto\">\n<li>We want to configure Lassie to use Module’s CACHE_DIR as the temp dir. Fortunately, there is already such an option exposed.<br>\n→ <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1745974332\" data-permission-text=\"Title is private\" data-url=\"https://github.com/filecoin-station/zinnia/issues/243\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/filecoin-station/zinnia/pull/243/hovercard\" href=\"https://github.com/filecoin-station/zinnia/pull/243\">filecoin-station/zinnia#243</a></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Implement Zinnia JS API for retrieving content for a given CID, optionally allowing the caller to specify the address and protocol to use. <strong>[3 days]</strong>\n<ul dir=\"auto\">\n<li>E.g. we can add a small <code class=\"notranslate\">fetch</code> wrapper that will translate URLs like <code class=\"notranslate\">ipfs://bafy...</code> into Lassie HTTP GET requests.</li>\n<li>Maybe it’s better to create our own API that will allow us to support additional request parameters like the peer address and the protocol to use. This new API can return <code class=\"notranslate\">fetch</code> response under the hood.<br>\n→ <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1745974332\" data-permission-text=\"Title is private\" data-url=\"https://github.com/filecoin-station/zinnia/issues/243\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/filecoin-station/zinnia/pull/243/hovercard\" href=\"https://github.com/filecoin-station/zinnia/pull/243\">filecoin-station/zinnia#243</a></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <del>Lassie improvements <strong>[2 days]</strong></del>\n<ul dir=\"auto\">\n<li><del>Implement authentication - only Zinnia requests should be handled by Lassie. Requests from other clients must be rejected.</del></li>\n<li><del>We want to configure Lassie HTTP mode to not cache blocks between retrieval requests.</del></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Update SPARK to use the new API <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1756886109\" data-permission-text=\"Title is private\" data-url=\"https://github.com/filecoin-station/spark/issues/5\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/filecoin-station/spark/pull/5/hovercard\" href=\"https://github.com/filecoin-station/spark/pull/5\">filecoin-station/spark#5</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> On <code class=\"notranslate\">zinniad</code> start, delete all files in Lassie’s temp dir. These files may be created if Station exits Station while a CID retrieval request is in progress.<br>\n→ <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1748030216\" data-permission-text=\"Title is private\" data-url=\"https://github.com/filecoin-station/zinnia/issues/245\" data-hovercard-type=\"issue\" data-hovercard-url=\"/filecoin-station/zinnia/issues/245/hovercard\" href=\"https://github.com/filecoin-station/zinnia/issues/245\">filecoin-station/zinnia#245</a></li>\n</ul>",
  "body": "eta: 2023-06-30\r\n\r\nReplace the code making HTTP requests to IPFS Gateway with a retrieval client like Lassie.\r\n\r\nImportant: Retrieval requests from this module should be indistinguishable from “legit” requests made by other actors in the network (e.g. Saturn). Otherwise SPs can prioritise checker requests over regular traffic.\r\n\r\nChildren:\r\n\r\n- [x] Write a Go/FFI shim to start & stop the Lassie HTTP server. Write Rust bindings for this shim and make sure we can use this from Rust! We will need to configure tooling for CI/CD and also write tests! **[5 days]**\r\n  → https://github.com/filecoin-station/rusty-lassie/pull/1\r\n- [x] Integrate Lassie into Zinnia (both `zinnia` and `zinniad`). (Start Lassie on start, stop it on exit.) **[2 day]**\r\n    - We want to configure Lassie to use Module’s CACHE_DIR as the temp dir. Fortunately, there is already such an option exposed.\r\n  → https://github.com/filecoin-station/zinnia/pull/243\r\n- [x] Implement Zinnia JS API for retrieving content for a given CID, optionally allowing the caller to specify the address and protocol to use. **[3 days]**\r\n    - E.g. we can add a small `fetch` wrapper that will translate URLs like `ipfs://bafy...` into Lassie HTTP GET requests.\r\n    - Maybe it’s better to create our own API that will allow us to support additional request parameters like the peer address and the protocol to use. This new API can return `fetch` response under the hood.\r\n  → https://github.com/filecoin-station/zinnia/pull/243\r\n- [x] ~~Lassie improvements **[2 days]**~~\r\n    - ~~Implement authentication - only Zinnia requests should be handled by Lassie. Requests from other clients must be rejected.~~\r\n    - ~~We want to configure Lassie HTTP mode to not cache blocks between retrieval requests.~~\r\n- [x] Update SPARK to use the new API https://github.com/filecoin-station/spark/pull/5\r\n- [x] On `zinniad` start, delete all files in Lassie’s temp dir. These files may be created if Station exits Station while a CID retrieval request is in progress.\r\n  → https://github.com/filecoin-station/zinnia/issues/245\r\n",
  "labels": [],
  "description": ""
}
