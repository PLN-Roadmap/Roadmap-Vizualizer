{
  "labels": [
    "roadmap",
    "starmaps"
  ],
  "completion_rate": 0,
  "due_date": "",
  "html_url": "https://github.com/ipfs/roadmap/issues/102",
  "title": "IPFS Stewards/Kubo Roadmap",
  "node_id": "I_kwDOCYHGZs5UuHSe",
  "body": "",
  "body_html": "",
  "body_text": "",
  "parent": {},
  "children": [
    {
      "labels": [
        "milestone",
        "starmaps"
      ],
      "completion_rate": 0,
      "due_date": "2022-12-31",
      "html_url": "https://github.com/ipfs/roadmap/issues/99",
      "group": "IPFS Stewards/Kubo Roadmap",
      "title": "Theme: Rich Application Support",
      "node_id": "I_kwDOCYHGZs5Ut70B",
      "body": "",
      "body_html": "",
      "body_text": "",
      "parent": {
        "html_url": "https://github.com/ipfs/roadmap/issues/102",
        "title": "IPFS Stewards/Kubo Roadmap",
        "node_id": "I_kwDOCYHGZs5UuHSe",
        "body": "",
        "body_html": "",
        "body_text": "",
        "labels": [
          "roadmap",
          "starmaps"
        ],
        "root_issue": true,
        "group": "root",
        "children": [
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/99",
            "title": "Theme: Rich Application Support",
            "node_id": "I_kwDOCYHGZs5Ut70B",
            "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nFuture investment focus area we will flesh out more. Should include:\r\n- Enhancing support for data mutability and addressing issues in current implementations/protocols\r\n- Being able to make data available through IPFS without re-encoding/re-writing",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nFuture investment focus area we will flesh out more. Should include:</p>\n<ul dir=\"auto\">\n<li>Enhancing support for data mutability and addressing issues in current implementations/protocols</li>\n<li>Being able to make data available through IPFS without re-encoding/re-writing</li>\n</ul>",
            "body_text": "eta: 2022-12-31\ndescription:\nFuture investment focus area we will flesh out more. Should include:\n\nEnhancing support for data mutability and addressing issues in current implementations/protocols\nBeing able to make data available through IPFS without re-encoding/re-writing",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": []
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "eta: 2022-12-31\r\n\r\nchildren: \r\n- https://github.com/ipfs/roadmap/issues/111\r\n- https://github.com/ipfs/roadmap/issues/112\r\n\r\ndescription:\r\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421435615\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/111/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/111\">#111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1423793505\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/112\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/112/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/112\">#112</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#111\n#112\n\ndescription:\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/106\r\n- https://github.com/ipfs/roadmap/issues/108\r\n\r\ndescription:\r\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.\r\n\r\n",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421400282\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/106\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/106/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/106\">#106</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421416369\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/108/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/108\">#108</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#106\n#108\n\ndescription:\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/103\r\n- https://github.com/ipfs/roadmap/issues/104\r\n- https://github.com/ipfs/roadmap/issues/110\r\n\r\ndescription:\r\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\r\n\r\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\r\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421395477\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/103\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/103/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/103\">#103</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421397236\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/104\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/104/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/104\">#104</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421429143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/110\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/110/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/110\">#110</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:</p>\n<p dir=\"auto\">Ensuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches<br>\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#103\n#104\n#110\n\ndescription:\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/105\r\n- https://github.com/ipfs/roadmap/issues/107\r\n- https://github.com/ipfs/roadmap/issues/109\r\n- \r\ndescription:\r\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\r\n\r\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\r\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\r\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421398467\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/105\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/105/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/105\">#105</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421405020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/107\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/107/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/107\">#107</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421425679\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/109\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/109/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/109\">#109</a></li>\n<li></li>\n</ul>\n<p dir=\"auto\">description:<br>\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:</p>\n<p dir=\"auto\">Being the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)<br>\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations<br>\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#105\n#107\n#109\n\n\ndescription:\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          }
        ]
      },
      "children": []
    },
    {
      "labels": [
        "milestone",
        "starmaps"
      ],
      "completion_rate": 0,
      "due_date": "2022-12-31",
      "html_url": "https://github.com/ipfs/roadmap/issues/98",
      "group": "IPFS Stewards/Kubo Roadmap",
      "title": "Theme: Engineering Excellence",
      "node_id": "I_kwDOCYHGZs5Ut7oT",
      "body": "",
      "body_html": "",
      "body_text": "",
      "parent": {
        "html_url": "https://github.com/ipfs/roadmap/issues/102",
        "title": "IPFS Stewards/Kubo Roadmap",
        "node_id": "I_kwDOCYHGZs5UuHSe",
        "body": "",
        "body_html": "",
        "body_text": "",
        "labels": [
          "roadmap",
          "starmaps"
        ],
        "root_issue": true,
        "group": "root",
        "children": [
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/99",
            "title": "Theme: Rich Application Support",
            "node_id": "I_kwDOCYHGZs5Ut70B",
            "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nFuture investment focus area we will flesh out more. Should include:\r\n- Enhancing support for data mutability and addressing issues in current implementations/protocols\r\n- Being able to make data available through IPFS without re-encoding/re-writing",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nFuture investment focus area we will flesh out more. Should include:</p>\n<ul dir=\"auto\">\n<li>Enhancing support for data mutability and addressing issues in current implementations/protocols</li>\n<li>Being able to make data available through IPFS without re-encoding/re-writing</li>\n</ul>",
            "body_text": "eta: 2022-12-31\ndescription:\nFuture investment focus area we will flesh out more. Should include:\n\nEnhancing support for data mutability and addressing issues in current implementations/protocols\nBeing able to make data available through IPFS without re-encoding/re-writing",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": []
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "eta: 2022-12-31\r\n\r\nchildren: \r\n- https://github.com/ipfs/roadmap/issues/111\r\n- https://github.com/ipfs/roadmap/issues/112\r\n\r\ndescription:\r\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421435615\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/111/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/111\">#111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1423793505\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/112\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/112/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/112\">#112</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#111\n#112\n\ndescription:\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/106\r\n- https://github.com/ipfs/roadmap/issues/108\r\n\r\ndescription:\r\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.\r\n\r\n",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421400282\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/106\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/106/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/106\">#106</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421416369\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/108/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/108\">#108</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#106\n#108\n\ndescription:\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/103\r\n- https://github.com/ipfs/roadmap/issues/104\r\n- https://github.com/ipfs/roadmap/issues/110\r\n\r\ndescription:\r\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\r\n\r\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\r\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421395477\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/103\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/103/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/103\">#103</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421397236\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/104\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/104/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/104\">#104</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421429143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/110\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/110/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/110\">#110</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:</p>\n<p dir=\"auto\">Ensuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches<br>\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#103\n#104\n#110\n\ndescription:\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/105\r\n- https://github.com/ipfs/roadmap/issues/107\r\n- https://github.com/ipfs/roadmap/issues/109\r\n- \r\ndescription:\r\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\r\n\r\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\r\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\r\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421398467\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/105\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/105/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/105\">#105</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421405020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/107\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/107/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/107\">#107</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421425679\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/109\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/109/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/109\">#109</a></li>\n<li></li>\n</ul>\n<p dir=\"auto\">description:<br>\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:</p>\n<p dir=\"auto\">Being the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)<br>\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations<br>\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#105\n#107\n#109\n\n\ndescription:\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          }
        ]
      },
      "children": [
        {
          "labels": [
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2023-03-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/111",
          "group": "Theme: Engineering Excellence",
          "title": "“Slimmer Kubo”: Trim out unnecessary code",
          "node_id": "I_kwDOCYHGZs5UuWLf",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        },
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2023-03-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/112",
          "group": "Theme: Engineering Excellence",
          "title": "IPFS KPIs",
          "node_id": "I_kwDOCYHGZs5U3V1h",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        }
      ]
    },
    {
      "labels": [
        "milestone",
        "starmaps"
      ],
      "completion_rate": 0,
      "due_date": "2022-12-31",
      "html_url": "https://github.com/ipfs/roadmap/issues/97",
      "group": "IPFS Stewards/Kubo Roadmap",
      "title": "Theme: Privacy",
      "node_id": "I_kwDOCYHGZs5Ut7Z9",
      "body": "",
      "body_html": "",
      "body_text": "",
      "parent": {
        "html_url": "https://github.com/ipfs/roadmap/issues/102",
        "title": "IPFS Stewards/Kubo Roadmap",
        "node_id": "I_kwDOCYHGZs5UuHSe",
        "body": "",
        "body_html": "",
        "body_text": "",
        "labels": [
          "roadmap",
          "starmaps"
        ],
        "root_issue": true,
        "group": "root",
        "children": [
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/99",
            "title": "Theme: Rich Application Support",
            "node_id": "I_kwDOCYHGZs5Ut70B",
            "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nFuture investment focus area we will flesh out more. Should include:\r\n- Enhancing support for data mutability and addressing issues in current implementations/protocols\r\n- Being able to make data available through IPFS without re-encoding/re-writing",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nFuture investment focus area we will flesh out more. Should include:</p>\n<ul dir=\"auto\">\n<li>Enhancing support for data mutability and addressing issues in current implementations/protocols</li>\n<li>Being able to make data available through IPFS without re-encoding/re-writing</li>\n</ul>",
            "body_text": "eta: 2022-12-31\ndescription:\nFuture investment focus area we will flesh out more. Should include:\n\nEnhancing support for data mutability and addressing issues in current implementations/protocols\nBeing able to make data available through IPFS without re-encoding/re-writing",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": []
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "eta: 2022-12-31\r\n\r\nchildren: \r\n- https://github.com/ipfs/roadmap/issues/111\r\n- https://github.com/ipfs/roadmap/issues/112\r\n\r\ndescription:\r\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421435615\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/111/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/111\">#111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1423793505\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/112\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/112/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/112\">#112</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#111\n#112\n\ndescription:\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/106\r\n- https://github.com/ipfs/roadmap/issues/108\r\n\r\ndescription:\r\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.\r\n\r\n",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421400282\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/106\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/106/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/106\">#106</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421416369\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/108/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/108\">#108</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#106\n#108\n\ndescription:\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/103\r\n- https://github.com/ipfs/roadmap/issues/104\r\n- https://github.com/ipfs/roadmap/issues/110\r\n\r\ndescription:\r\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\r\n\r\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\r\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421395477\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/103\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/103/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/103\">#103</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421397236\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/104\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/104/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/104\">#104</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421429143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/110\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/110/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/110\">#110</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:</p>\n<p dir=\"auto\">Ensuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches<br>\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#103\n#104\n#110\n\ndescription:\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/105\r\n- https://github.com/ipfs/roadmap/issues/107\r\n- https://github.com/ipfs/roadmap/issues/109\r\n- \r\ndescription:\r\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\r\n\r\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\r\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\r\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421398467\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/105\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/105/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/105\">#105</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421405020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/107\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/107/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/107\">#107</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421425679\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/109\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/109/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/109\">#109</a></li>\n<li></li>\n</ul>\n<p dir=\"auto\">description:<br>\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:</p>\n<p dir=\"auto\">Being the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)<br>\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations<br>\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#105\n#107\n#109\n\n\ndescription:\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          }
        ]
      },
      "children": [
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2022-12-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/106",
          "group": "Theme: Privacy",
          "title": "DHT Double Hashing Support",
          "node_id": "I_kwDOCYHGZs5UuNja",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        },
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2023-03-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/108",
          "group": "Theme: Privacy",
          "title": "Indexer double hashing support",
          "node_id": "I_kwDOCYHGZs5UuRex",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        }
      ]
    },
    {
      "labels": [
        "milestone",
        "starmaps"
      ],
      "completion_rate": 0,
      "due_date": "2022-12-31",
      "html_url": "https://github.com/ipfs/roadmap/issues/96",
      "group": "IPFS Stewards/Kubo Roadmap",
      "title": "Theme: Content Routing Innovation",
      "node_id": "I_kwDOCYHGZs5Ut7SC",
      "body": "",
      "body_html": "",
      "body_text": "",
      "parent": {
        "html_url": "https://github.com/ipfs/roadmap/issues/102",
        "title": "IPFS Stewards/Kubo Roadmap",
        "node_id": "I_kwDOCYHGZs5UuHSe",
        "body": "",
        "body_html": "",
        "body_text": "",
        "labels": [
          "roadmap",
          "starmaps"
        ],
        "root_issue": true,
        "group": "root",
        "children": [
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/99",
            "title": "Theme: Rich Application Support",
            "node_id": "I_kwDOCYHGZs5Ut70B",
            "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nFuture investment focus area we will flesh out more. Should include:\r\n- Enhancing support for data mutability and addressing issues in current implementations/protocols\r\n- Being able to make data available through IPFS without re-encoding/re-writing",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nFuture investment focus area we will flesh out more. Should include:</p>\n<ul dir=\"auto\">\n<li>Enhancing support for data mutability and addressing issues in current implementations/protocols</li>\n<li>Being able to make data available through IPFS without re-encoding/re-writing</li>\n</ul>",
            "body_text": "eta: 2022-12-31\ndescription:\nFuture investment focus area we will flesh out more. Should include:\n\nEnhancing support for data mutability and addressing issues in current implementations/protocols\nBeing able to make data available through IPFS without re-encoding/re-writing",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": []
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "eta: 2022-12-31\r\n\r\nchildren: \r\n- https://github.com/ipfs/roadmap/issues/111\r\n- https://github.com/ipfs/roadmap/issues/112\r\n\r\ndescription:\r\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421435615\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/111/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/111\">#111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1423793505\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/112\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/112/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/112\">#112</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#111\n#112\n\ndescription:\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/106\r\n- https://github.com/ipfs/roadmap/issues/108\r\n\r\ndescription:\r\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.\r\n\r\n",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421400282\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/106\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/106/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/106\">#106</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421416369\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/108/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/108\">#108</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#106\n#108\n\ndescription:\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/103\r\n- https://github.com/ipfs/roadmap/issues/104\r\n- https://github.com/ipfs/roadmap/issues/110\r\n\r\ndescription:\r\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\r\n\r\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\r\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421395477\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/103\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/103/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/103\">#103</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421397236\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/104\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/104/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/104\">#104</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421429143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/110\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/110/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/110\">#110</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:</p>\n<p dir=\"auto\">Ensuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches<br>\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#103\n#104\n#110\n\ndescription:\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/105\r\n- https://github.com/ipfs/roadmap/issues/107\r\n- https://github.com/ipfs/roadmap/issues/109\r\n- \r\ndescription:\r\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\r\n\r\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\r\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\r\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421398467\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/105\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/105/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/105\">#105</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421405020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/107\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/107/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/107\">#107</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421425679\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/109\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/109/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/109\">#109</a></li>\n<li></li>\n</ul>\n<p dir=\"auto\">description:<br>\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:</p>\n<p dir=\"auto\">Being the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)<br>\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations<br>\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#105\n#107\n#109\n\n\ndescription:\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          }
        ]
      },
      "children": [
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2022-10-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/103",
          "group": "Theme: Content Routing Innovation",
          "title": "Reframe support in IPFS Gateways",
          "node_id": "I_kwDOCYHGZs5UuMYV",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        },
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2022-12-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/104",
          "group": "Theme: Content Routing Innovation",
          "title": "Spec for content routing selection",
          "node_id": "I_kwDOCYHGZs5UuMz0",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        },
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2023-06-30",
          "html_url": "https://github.com/ipfs/roadmap/issues/110",
          "group": "Theme: Content Routing Innovation",
          "title": "Implement default content routing selection",
          "node_id": "I_kwDOCYHGZs5UuUmX",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        }
      ]
    },
    {
      "labels": [
        "starmaps"
      ],
      "completion_rate": 0,
      "due_date": "2022-12-31",
      "html_url": "https://github.com/ipfs/roadmap/issues/95",
      "group": "IPFS Stewards/Kubo Roadmap",
      "title": "Theme: Ubiquitous Clients/Implementations",
      "node_id": "I_kwDOCYHGZs5Ut7BF",
      "body": "",
      "body_html": "",
      "body_text": "",
      "parent": {
        "html_url": "https://github.com/ipfs/roadmap/issues/102",
        "title": "IPFS Stewards/Kubo Roadmap",
        "node_id": "I_kwDOCYHGZs5UuHSe",
        "body": "",
        "body_html": "",
        "body_text": "",
        "labels": [
          "roadmap",
          "starmaps"
        ],
        "root_issue": true,
        "group": "root",
        "children": [
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/99",
            "title": "Theme: Rich Application Support",
            "node_id": "I_kwDOCYHGZs5Ut70B",
            "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nFuture investment focus area we will flesh out more. Should include:\r\n- Enhancing support for data mutability and addressing issues in current implementations/protocols\r\n- Being able to make data available through IPFS without re-encoding/re-writing",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nFuture investment focus area we will flesh out more. Should include:</p>\n<ul dir=\"auto\">\n<li>Enhancing support for data mutability and addressing issues in current implementations/protocols</li>\n<li>Being able to make data available through IPFS without re-encoding/re-writing</li>\n</ul>",
            "body_text": "eta: 2022-12-31\ndescription:\nFuture investment focus area we will flesh out more. Should include:\n\nEnhancing support for data mutability and addressing issues in current implementations/protocols\nBeing able to make data available through IPFS without re-encoding/re-writing",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": []
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/98",
            "title": "Theme: Engineering Excellence",
            "node_id": "I_kwDOCYHGZs5Ut7oT",
            "body": "eta: 2022-12-31\r\n\r\nchildren: \r\n- https://github.com/ipfs/roadmap/issues/111\r\n- https://github.com/ipfs/roadmap/issues/112\r\n\r\ndescription:\r\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421435615\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/111/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/111\">#111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1423793505\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/112\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/112/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/112\">#112</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#111\n#112\n\ndescription:\nAs an engineering team supporting a large amount of code in open source projects which now has some years behind it, there is always going to be engineering debt. But beyond debt, we want to continue to invest thoughtfully in ways that can increase the efficiency and effectiveness of our engineers.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/111",
                "title": "“Slimmer Kubo”: Trim out unnecessary code",
                "node_id": "I_kwDOCYHGZs5UuWLf",
                "body": "eta:2023-03-31\r\n\r\ndescription:\r\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\r\n\r\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\r\n\r\nDone:\r\n\r\nRemove some specific things: Fuse, graphsync, others based on analysis\r\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "body_html": "<p dir=\"auto\">eta:2023-03-31</p>\n<p dir=\"auto\">description:<br>\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.</p>\n<p dir=\"auto\">Kubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Remove some specific things: Fuse, graphsync, others based on analysis<br>\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.</p>",
                "body_text": "eta:2023-03-31\ndescription:\nClean up old, non-critical functionality from Kubo to limit supported surface area and help team focus on strategic priorities/functionality.\nKubo today has become a bit bloated with functionality that is not critical to our key use cases, has not been touched in a long time, etc. We then get issues opened against that functionality or questions about it, which diverts team time/resources away from key strategic work. We would like to clean some of this out of Kubo to help us be more efficient/effective, and focused on top priorities.\nDone:\nRemove some specific things: Fuse, graphsync, others based on analysis\nThis actually requires a multi-part deprecation strategy, so we would start with deprecation, with code removal occurring potentially 6 months later.",
                "labels": [
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/112",
                "title": "IPFS KPIs",
                "node_id": "I_kwDOCYHGZs5U3V1h",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nFully specify, automate, and dashboard a set of KPIs to track IPFS product performance and community health",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/97",
            "title": "Theme: Privacy",
            "node_id": "I_kwDOCYHGZs5Ut7Z9",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/106\r\n- https://github.com/ipfs/roadmap/issues/108\r\n\r\ndescription:\r\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.\r\n\r\n",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421400282\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/106\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/106/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/106\">#106</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421416369\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/108\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/108/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/108\">#108</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#106\n#108\n\ndescription:\nPrivacy needs to be considered \"table-stakes\" for IPFS. We will continue to invest in protocols and implementations to ensure user privacy is always honored.",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/106",
                "title": "DHT Double Hashing Support",
                "node_id": "I_kwDOCYHGZs5UuNja",
                "body": "eta:  2022-12-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\r\n\r\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\r\n\r\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\r\n\r\nIn partnership with ProbeLab: [Double Hashing for Privacy](https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609)\r\n\r\nAlso partnership with LibP2P\r\n\r\nDone:\r\n\r\nfinalized design for double hashing on content requests to the DHT\r\nUpdate IPFS specs\r\ndouble hashing support for DHT lookups implemented in Kubo",
                "body_html": "<p dir=\"auto\">eta:  2022-12-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.</p>\n<p dir=\"auto\">Why: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.</p>\n<p dir=\"auto\">In partnership with ProbeLab: <a href=\"https://www.notion.so/Double-Hashing-for-Privacy-ff44e3156ce040579289996fec9af609\" rel=\"nofollow\">Double Hashing for Privacy</a></p>\n<p dir=\"auto\">Also partnership with LibP2P</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">finalized design for double hashing on content requests to the DHT<br>\nUpdate IPFS specs<br>\ndouble hashing support for DHT lookups implemented in Kubo</p>",
                "body_text": "eta:  2022-12-31\ndescription:\nDefine and deliver support for double hashing in Kubo DHT nodes to enhance IPFS privacy.\nShared effort with Probelab. Steward work needs to be better understood and estimated to have higher confidence on the date.\nWhy: Double Hashing ensures that user requests for content on the network cannot be tracked, ensuring user privacy.\nIn partnership with ProbeLab: Double Hashing for Privacy\nAlso partnership with LibP2P\nDone:\nfinalized design for double hashing on content requests to the DHT\nUpdate IPFS specs\ndouble hashing support for DHT lookups implemented in Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/108",
                "title": "Indexer double hashing support",
                "node_id": "I_kwDOCYHGZs5UuRex",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\r\n\r\nShared effort with Probelab, Bedrock, and libp2p.",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.</p>\n<p dir=\"auto\">Shared effort with Probelab, Bedrock, and libp2p.</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nDefine and deliver support for double hashing with indexers from Kubo to enhance IPFS privacy.\nShared effort with Probelab, Bedrock, and libp2p.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/96",
            "title": "Theme: Content Routing Innovation",
            "node_id": "I_kwDOCYHGZs5Ut7SC",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/103\r\n- https://github.com/ipfs/roadmap/issues/104\r\n- https://github.com/ipfs/roadmap/issues/110\r\n\r\ndescription:\r\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\r\n\r\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\r\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421395477\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/103\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/103/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/103\">#103</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421397236\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/104\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/104/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/104\">#104</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421429143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/110\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/110/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/110\">#110</a></li>\n</ul>\n<p dir=\"auto\">description:<br>\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:</p>\n<p dir=\"auto\">Ensuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches<br>\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#103\n#104\n#110\n\ndescription:\nContent routing will continue to be amongst the most critical areas for innovation to extend the reach of IPFS to all the data on the planet and to support low latency application scenarios. We will advance the state of IPFS Content Routing by:\nEnsuring the protocols and implementations support the flexibility for teams and organizations across the ecosystem to experiment with and commit to diverse content routing approaches\nDirectly driving innovation in content routing technology into the core reference implementations of IPFS",
            "labels": [
              "milestone",
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/103",
                "title": "Reframe support in IPFS Gateways",
                "node_id": "I_kwDOCYHGZs5UuMYV",
                "body": "eta: 2022-10-31\r\n\r\ndescription:\r\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\r\n\r\nTracking issue: https://github.com/ipfs/kubo/issues/9150\r\n\r\nDone:\r\n\r\nReframe is enabled on the [ipfs.io](http://ipfs.io/) gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\r\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "body_html": "<p dir=\"auto\">eta: 2022-10-31</p>\n<p dir=\"auto\">description:<br>\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.</p>\n<p dir=\"auto\">Tracking issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1317473866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/kubo/issues/9150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/kubo/issues/9150/hovercard\" href=\"https://github.com/ipfs/kubo/issues/9150\">ipfs/kubo#9150</a></p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Reframe is enabled on the <a href=\"http://ipfs.io/\" rel=\"nofollow\">ipfs.io</a> gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.<br>\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs</p>",
                "body_text": "eta: 2022-10-31\ndescription:\nReframe is enabled on the ipfs.io gateway, hitting cid.contact in parallel to query the DHT to determine providers for a CID.\nTracking issue: ipfs/kubo#9150\nDone:\nReframe is enabled on the ipfs.io gateway, hitting Store The Index in parallel to querying the DHT to determine providers for a CID.\nAbove uses cache-friendly mechanisms like HTTP GET and DAG CBOR in URLs",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/104",
                "title": "Spec for content routing selection",
                "node_id": "I_kwDOCYHGZs5UuMz0",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\r\n\r\nShared effort with Bedrock and other IPFS implementers.\r\n\r\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.</p>\n<p dir=\"auto\">Shared effort with Bedrock and other IPFS implementers.</p>\n<p dir=\"auto\">Done: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nEvolve IPFS specs to define mechanisms for content routing selection and defaults. There is a clear community-reviewed spec for how an implementation like Kubo would use indexers by default without hardcoding it into Kubo's default configuration.\nShared effort with Bedrock and other IPFS implementers.\nDone: Accepted spec (IPIP process) to define how IPFS implementations can bootstrap content routing selection/defaults.",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/110",
                "title": "Implement default content routing selection",
                "node_id": "I_kwDOCYHGZs5UuUmX",
                "body": "eta: 2023-06-30\r\n\r\ndescription:\r\nDepends on:\r\n\r\nIndexer Double Hashing Support\r\nSpec for Content Routing Selection\r\nDone:\r\n\r\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "body_html": "<p dir=\"auto\">eta: 2023-06-30</p>\n<p dir=\"auto\">description:<br>\nDepends on:</p>\n<p dir=\"auto\">Indexer Double Hashing Support<br>\nSpec for Content Routing Selection<br>\nDone:</p>\n<p dir=\"auto\">Full support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo</p>",
                "body_text": "eta: 2023-06-30\ndescription:\nDepends on:\nIndexer Double Hashing Support\nSpec for Content Routing Selection\nDone:\nFull support (Kubo + any necessary infrastructure) to support content routing selection, including default use of cid.content by Kubo",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "eta: 2022-12-31\r\n\r\nchildren:\r\n- https://github.com/ipfs/roadmap/issues/105\r\n- https://github.com/ipfs/roadmap/issues/107\r\n- https://github.com/ipfs/roadmap/issues/109\r\n- \r\ndescription:\r\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\r\n\r\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\r\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\r\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">children:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421398467\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/105\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/105/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/105\">#105</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421405020\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/107\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/107/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/107\">#107</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1421425679\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/roadmap/issues/109\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/roadmap/issues/109/hovercard\" href=\"https://github.com/ipfs/roadmap/issues/109\">#109</a></li>\n<li></li>\n</ul>\n<p dir=\"auto\">description:<br>\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:</p>\n<p dir=\"auto\">Being the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)<br>\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations<br>\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)</p>",
            "body_text": "eta: 2022-12-31\nchildren:\n\n#105\n#107\n#109\n\n\ndescription:\nTo increase usage of the IPFS protocol across the board, we need there to be a rich array of clients supporting many possible use-cases on many possible platforms. We do this by:\nBeing the primary contributors/maintainers of one or more high-quality, off-the-shelf reference IPFS host implementation(s)\nFinding opportunities to unblock/accelerate new implementations being developed by other projects/organizations\nHelping guide the extensions to core protocols necessary to support new client design patterns (e.g., Thin Clients)",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          }
        ]
      },
      "children": [
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2022-12-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/105",
          "group": "Theme: Ubiquitous Clients/Implementations",
          "title": "Enable verifiable retrieval on the ipfs.io gateway",
          "node_id": "I_kwDOCYHGZs5UuNHD",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        },
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2023-03-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/107",
          "group": "Theme: Ubiquitous Clients/Implementations",
          "title": "libipfs",
          "node_id": "I_kwDOCYHGZs5UuOtc",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        },
        {
          "labels": [
            "milestone",
            "starmaps"
          ],
          "completion_rate": 0,
          "due_date": "2023-03-31",
          "html_url": "https://github.com/ipfs/roadmap/issues/109",
          "group": "Theme: Ubiquitous Clients/Implementations",
          "title": "Verifiable retrieval in light clients",
          "node_id": "I_kwDOCYHGZs5UuTwP",
          "body": "",
          "body_html": "",
          "body_text": "",
          "parent": {
            "html_url": "https://github.com/ipfs/roadmap/issues/95",
            "title": "Theme: Ubiquitous Clients/Implementations",
            "node_id": "I_kwDOCYHGZs5Ut7BF",
            "body": "",
            "body_html": "",
            "body_text": "",
            "labels": [
              "starmaps"
            ],
            "group": "children:",
            "children": [
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/105",
                "title": "Enable verifiable retrieval on the ipfs.io gateway",
                "node_id": "I_kwDOCYHGZs5UuNHD",
                "body": "eta: 2022-12-31\r\n\r\ndescription:\r\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\r\n\r\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: https://github.com/ipfs/specs/issues/320\r\n\r\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\r\n\r\nDone:\r\n\r\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\r\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "body_html": "<p dir=\"auto\">eta: 2022-12-31</p>\n<p dir=\"auto\">description:<br>\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.</p>\n<p dir=\"auto\">One major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1363712895\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ipfs/specs/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ipfs/specs/issues/320/hovercard\" href=\"https://github.com/ipfs/specs/issues/320\">ipfs/specs#320</a></p>\n<p dir=\"auto\">Another issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)</p>\n<p dir=\"auto\">Done:</p>\n<p dir=\"auto\">Update IPFS specs to define protocol changes to enable verifiable retrieval in all cases<br>\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients</p>",
                "body_text": "eta: 2022-12-31\ndescription:\nSpecification for gateway-verifiable retrieval and implementation in Kubo gateway code.\nOne major remaining issue is signed IPNS records. We will need to update IPFS specs to define how this works: ipfs/specs#320\nAnother issue: There is also perf. problem of multiple round-trips when requesting deep sub paths like /ipfs/cid/sub/dir/some/file.jpg → requires 5 requests (1CAR with file.jpg and 4 blocks, one for each dir level)\nDone:\nUpdate IPFS specs to define protocol changes to enable verifiable retrieval in all cases\nUpdate (Kubo) Gateway code to address known deficiencies so that we can properly support verifiable retrieval from light clients",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/107",
                "title": "libipfs",
                "node_id": "I_kwDOCYHGZs5UuOtc",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\r\n\r\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\r\n\r\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers\r\n\r\n",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.</p>\n<p dir=\"auto\">Kubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs</p>\n<p dir=\"auto\">Done: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nCore Kubo functionality is refactored into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers.\nKubo has a bunch of battle-tested code over the years. Unfortunately it’s not easy to consume as a library because of the repo sprawl and having to pull in all the relevant pieces. It’s also hard for maintainers to keep it updated and we’re reliant on Kubo as the delivery vehicle to specify compatible versions. Seeing the success go-libp2p has had moving to a monorepo, we will move to a similar pattern where Kubo specifics stay in Kubo but the generally usable parts for anyone writing an IPFS implementation in Go can live in libipfs\nDone: Core Kubo functionality is packaged into a library used both by Kubo as well as other implementers who want to support additional use cases without blocking on Kubo maintainers",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              },
              {
                "html_url": "https://github.com/ipfs/roadmap/issues/109",
                "title": "Verifiable retrieval in light clients",
                "node_id": "I_kwDOCYHGZs5UuTwP",
                "body": "eta: 2023-03-31\r\n\r\ndescription:\r\nTheme: Ubiquitous Clients\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients.\r\n\r\nDepends on:\r\n\r\nEnable verifiable retrieval on the gateway\r\nDone:\r\n\r\nDeliver Rust library for client-side verifiable retrieval in light clients\r\nNotes:\r\n\r\nWe need to ensure we have alignment on use of Rust here with stakeholders\r\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "body_html": "<p dir=\"auto\">eta: 2023-03-31</p>\n<p dir=\"auto\">description:<br>\nTheme: Ubiquitous Clients</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients.</p>\n<p dir=\"auto\">Depends on:</p>\n<p dir=\"auto\">Enable verifiable retrieval on the gateway<br>\nDone:</p>\n<p dir=\"auto\">Deliver Rust library for client-side verifiable retrieval in light clients<br>\nNotes:</p>\n<p dir=\"auto\">We need to ensure we have alignment on use of Rust here with stakeholders<br>\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point</p>",
                "body_text": "eta: 2023-03-31\ndescription:\nTheme: Ubiquitous Clients\nDeliver Rust library for client-side verifiable retrieval in light clients.\nDepends on:\nEnable verifiable retrieval on the gateway\nDone:\nDeliver Rust library for client-side verifiable retrieval in light clients\nNotes:\nWe need to ensure we have alignment on use of Rust here with stakeholders\nWe believe it’s stategic for IP Stewards to invest in building muscle with Rust, and this is a good starting point",
                "labels": [
                  "milestone",
                  "starmaps"
                ],
                "group": "children:",
                "children": []
              }
            ]
          },
          "children": []
        }
      ]
    }
  ]
}